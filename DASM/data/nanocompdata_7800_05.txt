ORG 7800
LABEL 4000 PORTA
LABEL 4001 PORTB 
LABEL 4002 CTRLA
LABEL 4003 CTRLB 
LABEL 00 PORTADP
LABEL 01 PORTBDP 
LABEL 02 CTRLADP
LABEL 03 CTRLBDP 
LABEL 0x2710 DEC10K
LABEL 0x03E8 DEC1K

DATA 7936-793F
DATA 79FA-79FF 6
DATA 7A7E-7A7F
DATA 7BB0-7BFF 8

LABEL 0x7800 HEXTODEC
;G 7800 type L then decimal No then I to display Hex, press I to start again
;Press P for hex to decimal then I
LABEL 0x7804 HEXTODEC1
LABEL 0x7817 HEXTODEC2
LABEL 0x7827 HEXTODEC3
LABEL 0x7842 HEXTODEC4
LABEL 0x7848 HEXTODEC5
LABEL 0x7855 HEXTODEC6
LABEL 0x7857 HEXTODEC7
LABEL 0x7869 HEXTODEC8
LABEL 0x786B HEXTODEC9
LABEL 0x787D HEXTODEC10
LABEL 0x787F HEXTODEC11
LABEL 0x7891 HEXTODEC12

LABEL 0x78BD HEXTODEC13
LABEL 0x78C7 HEXTODEC14
LABEL 0x78CB HEXTODEC141
LABEL 0x78E3 HEXTODEC15
LABEL 0x78EE HEXTODEC16
LABEL 0x78F4 HEXTODEC17
LABEL 0x78FF HEXTODEC18
LABEL 0x7907 HEXTODEC19
LABEL 0x790E HEXTODEC20
LABEL 0x7914 HEXTODEC21
LABEL 0x791B HEXTODEC22
LABEL 0x791E HEXTODEC23
LABEL 0x7922 HEXTODEC24
LABEL 0x7929 HEXTODEC25

COMMENTLINE 781A P pressed for Hex to Decimal
COMMENTLINE 7820 L pressed for Decimal to Hex
COMMENTLINE 782A I pressed to display Hex


LABEL 7A00 CALCOFFSET
;G 7A00 Displays S enter start address  then I
;Displays d for destination then twos complement offset displayed, if outside range displays --, press I for next

LABEL 0x7A08  CALCOFFSET1
LABEL 0x7A10  CALCOFFSET2
LABEL 0x7A29  CALCOFFSET3
LABEL 0x7A6E  CALCOFFSET4
LABEL 0x7A77  CALCOFFSET5


LABEL 7A80 MASTERMIND
;I displayed after thinking of 4 digit number 4 digits 0-7 Press I enter guess 2 digits display Correct digits and correct numbers in wrong places (Bulls and Cows)
;Press I for next number, after 4 bulls press I and displays number of tries
LABEL 0x7A94 MASTERM1
LABEL 0x7AA4 MASTERM2
LABEL 0x7AB7 MASTERM3
LABEL 0x7AD7 MASTERM4
LABEL 0x7AD9 MASTERM5
LABEL 0x7ADF MASTERM6
LABEL 0x7AE0 MASTERM7
LABEL 0x7AE9 MASTERM8
LABEL 0x7B0F MASTERM9
LABEL 0x7B1D MASTERM10
LABEL 0x7B23 MASTERM11
LABEL 0x7B2D MASTERM12
LABEL 0x7B3F MASTERM13
LABEL 0x7B48 MASTERM14
LABEL 0x7B52 MASTERM15
LABEL 0x7B57 MASTERM16
LABEL 0x7B5C MASTERM17
LABEL 0x7B61 MASTERM18
LABEL 0x7B64 MASTERM19
LABEL 0x7B6B MASTERM20
LABEL 0x7B79 MASTERM21
LABEL 0x7B90 MASTERM22
LABEL 0x7BA3 MASTERM23
LABEL 0x7BA4 MASTERM24

LABEL 0x7940 DUCKSHOOT
LABEL 0x7953 DUCKSHOOT0
LABEL 0x796B DUCKSHOOT1
LABEL 0x796F DUCKSHOOT2
LABEL 0x7977 DUCKSHOOT3
LABEL 0x797D DUCKSHOOT4
LABEL 0x7986 DUCKSHOOT5
LABEL 0x798E DUCKSHOOT6

LABEL 0x7992 DUCKSHOOT7
LABEL 0x7997 DUCKSHOOT8
LABEL 0x79A1 DUCKSHOOT9
LABEL 0x79BA DUCKSHOOT10
LABEL 0x79CF DUCKSHOOT11
LABEL 0x79DD DUCKSHOOT12
LABEL 0x79EF DUCKSHOOT13

DATA 7C00-7C0F 8
DATA 7C10-7C1F 8
LABEL 7C20 GETKEY
LABEL 7C26 GETKEY0
COMMENTLINE 7C26 Set up I/O port
LABEL 7C40 GETKEY1
COMMENTLINE 7C47 Found a key - decode it

LABEL 7C3B GETKEY2
LABEL 7C5B GETKEY3
LABEL 7C50 GETKEY4
LABEL 7C6D GETKEY5

COMMENTLINE 7C66 Wait for the key to be released
LABEL 7C6C GETKEY6
LABEL 7C7B DISPRESH
COMMENTLINE 7C7D Set output ports for display
LABEL 7CAA DISP1
COMMENTLINE 7C93 Initialise loop over digits
COMMENT 7C93 They are numbered 4..9 to correspond to outputs from the 7442 decoder.
LABEL 7C98 DISP2
COMMENTLINE 7C9D Finished
LABEL 7C9F DISP3
COMMENTLINE 7C9F Light up the next digit
COMMENTLINE 7CA8 Delay loop

LABEL 7CAF BADDR1
LABEL 7CB5 BADDR
COMMENTLINE 7CB5 Input 2 byte address into X; result also at [addr]

LABEL 7CCC HEXIN
COMMENTLINE 7CCC Input 2 hex digits into A and update display at X

LABEL 7CE7 HEXCON
COMMENTLINE 7CE7 Fall-thru
LABEL 7CEE HEXCON1
LABEL 7CE4 KEYHEX

LABEL 7CFF L7SEG
COMMENTLINE 7CFF Fall-thru

LABEL 7D03 R7SEG
COMMENTLINE 7D03 Convert low-order 4 bits of A to 7seg
LABEL 7D0A R71
LABEL 7D11 R72
LABEL 7D15 SVNHEX
COMMENTLINE 7D15 Convert 7seg to hex
LABEL 7D1D SVNHEX1
LABEL 7D21 TORESUME2
LABEL 7D26 SVNHEX2

LABEL 7D28 MEMDISP
COMMENTLINE 7D28 Prompt for address with 'M' and display memory contents
LABEL 7D31 MEM0
LABEL 7D3F MEM1
COMMENTLINE 7D3F Check for I key
LABEL 7D52 MEM2
COMMENTLINE 7D52 Store and increment

LABEL 7D89 RESET
COMMENTLINE 7D89 Reset Handler

LABEL 7D8D NMISR
COMMENTLINE 7D91 Set up NMI to point here

LABEL 7D97 RESUME

COMMENTLINE 7DA1 Show '-' at left
COMMENTLINE 7DA8 If key is 'M'
COMMENTLINE 7DAE If key is 'R'
COMMENTLINE 7DB2 If key is 'CN'
COMMENTLINE 7DB6 If key is 'CL'
COMMENTLINE 7DBC If key is 'P'
COMMENTLINE 7DC2 If key is 'G'
LABEL 7DC2 reset3
LABEL 7DC6 go
COMMENTLINE 7DC6 Prompt and accept start address

LABEL 7DD8 CONT

LABEL 7DDC CLEARDISP
COMMENTLINE 7DDC Clear display
LABEL 7DE4 CLEARDISP1

COMMENTLINE 7DEB Characters for Reg Display  C b A b d H Y U P S 
LABEL 7DEB REGDISPCHAR
LABEL 7DEF REGDISPCHAR2

DATA 7DEB-7DF3
LABEL 7DF4 REGCHAREND 

LABEL 7DFF REGDISP
COMMENTLINE 7E03 Read characters from REGDISPCHAR

LABEL 7E06 REGDISP1
LABEL 7E13 SHOWLEFT
LABEL 7E27 SHOWBYTE
LABEL 7E47 RECVBIT
LABEL 7E49 RETRY
LABEL 7E4B RECV1
COMMENTLINE 7E4B Listen for a high signal on PORTB[7]
LABEL 7E51 RECV2
COMMENTLINE 7E51 Wait a moment
COMMENTLINE 7E54 Check the signal is still high
COMMENTLINE 7E5A Time until the signal is low
LABEL 7E5C RECV3
COMMENTLINE 7E63 Show a bit pattern in the display
LABEL 7E69 RECV4
COMMENTLINE 7E6C Set CC with the result - positive for a 1
LABEL 7E6F RECVBYTE
COMMENTLINE 7E6F Receive a byte and return in B
LABEL 7E71 RBYTE1
COMMENTLINE 7E71 Wait for start bit
COMMENTLINE 7E75 Prepare to gather 8 bits
LABEL 7E77 RBYTE3
COMMENTLINE 7E77 Loop once per bit, LSB first
LABEL 7E7F RBYTE2

LABEL 7E85 LOAD
COMMENTLINE 7E85 Set up I/O Ports

LABEL 7E9D RELOAD
COMMENTLINE 7E9F Wait for $53 = S

COMMENTLINE 7EA5  Code S1 begins a record
COMMENTLINE 7EA9 Code SJ means EOF
LABEL 7EAD MESSAGEF
COMMENTLINE 7EAD Show F in display forever

LABEL 7EB1 LOAD2
COMMENTLINE 7EB1 Get count, initialise checksum
COMMENTLINE 7EB7 Get two-byte address, accumulating checksum in A

LABEL 7ECB LDLOOP
LABEL 7ED9 LDDONE
COMMENTLINE 7ED9 Verify checksum

COMMENTLINE 7EE3 Fall-thru

LABEL 7EE3 ERRSTOP
LABEL 7EE8 DEAD


LABEL 7EED SAVE
COMMENTLINE 7EED Save to tape Prompt S and get start address

COMMENTLINE 7EF7 Prompt F and get finish address

COMMENTLINE 7F00 Set up output port
LABEL 7F11 SAVE1
COMMENTLINE 7F11 Send two bytes of all ones

LABEL 7F17 SAVE4
COMMENTLINE 7F17 Send block start

LABEL 7F21 SAVE2
COMMENTLINE 7F21 Send length code and init checksum

COMMENTLINE 7F29 Send (half of) address and add to checksum

COMMENTLINE 7F32 Send other half of address and add to checksum

LABEL 7F3C SAVE3
COMMENTLINE 7F3C Send a data byte and add to checksum

LABEL 7F50 ENDBLOCK
COMMENTLINE 7F50  Send checksum

COMMENTLINE 7F55 Test if all finished

COMMENTLINE 7F59 Test if another full block to send

COMMENTLINE 7F6B Last block may be short

LABEL 7F71 SENDEOF
COMMENTLINE 7F71 Send eof code 534a = 'SJ'

LABEL 7F7C SENDSTART
COMMENTLINE 7F7C Send magic code 'S1'

LABEL 7F84 SENDBYTE
COMMENTLINE 7F84 Transmit byte from (X)

LABEL 7F86 SEND
COMMENTLINE 7F86 Transmit byte from A
COMMENTLINE 7F88 Total of 10 bits to send, including start and stop

COMMENTLINE 7F8C Set up start bit
LABEL 7F8E NEXTBIT
COMMENTLINE 7F8E Next bit in C flag - set B to delay count
LABEL 7F94 SAVE8

COMMENTLINE 7F96 Set bit in output port

LABEL 7F9D DELAY1

COMMENTLINE 7FA0 Clear bit in output port

COMMENTLINE 7FA3 Same delay loop again

LABEL 7FA5 DELAY2

COMMENTLINE 7FA8 Rotate a 1 bit into A, so stop bit will be a 1

LABEL 7C00 KEYCODE
LABEL 7C10 SVNSEG
LABEL 0x13EB count 
LABEL 0x00EB countdp
LABEL 0x00ED chksumdp 
LABEL 0x13ED chksum 

LABEL 0x0000 allzeros
LABEL 0x00EE ptrdp
LABEL 0x00EF ptrdp+1
LABEL 0x13EE ptr

LABEL 13F0 addr
LABEL 13F1 addr+1
LABEL 00F0 addrdp
LABEL 00F1 addrdp+1

LABEL 0x00ED tmp3 
LABEL 0x00EC tmp2 

LABEL 0xF6 tmpX

LABEL 0x13D0 usrspdp

LABEL 0x00D0 usrsp
LABEL 13F8 stackstart
LABEL 00F8 stackstartdp
LABEL 0x13FA dbuf 

LABEL 0x00FA dbuf+0 
LABEL 0x00FB dbuf+1 
LABEL 0x00FC dbuf+2 
LABEL 0x00FD dbuf+3 
LABEL 0x00FE dbuf+4
LABEL 0x00FF dbuf+5
LABEL 13E5 SWI3VEC
LABEL 13E7 SWI2VEC
LABEL 13E9 FIRQVEC
LABEL 13F2 NMIVEC
LABEL 13F4 IRQVEC

COMMENTLINE 7FF2 Interrupt vectors

LABEL 7FF2 SWI3INTR
LABEL 7FF4 SWI2INTR
LABEL 7FF6 FIRQINTR

LABEL 7FF8 INTRQ
LABEL 7FFA SWINTR
LABEL 7FFC NMINTR
LABEL 7FFE RESETBOOT

LABEL 0025 keyCN
LABEL 0035 keyG
LABEL 0032 keyI
LABEL 0005 keyL
LABEL 0031 keyM
LABEL 0015 keyP
LABEL 0030 keyR



DATA 7FB1-7FCF

DATA 7FE9-7FF1
DATA 7FF2-7FF3
DATA 7FF4-7FF5
DATA 7FF6-7FF7
DATA 7FF8-7FF9
DATA 7FFA-7FFB
DATA 7FFC-7FFD
DATA 7FFE-7FFF
