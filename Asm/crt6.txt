                      ; C:\Users\Dave\Documents\_6809\asm6809-2.12-w64\asm6809.exe -S -l crt6.txt crt6.asm -o crt6.srec
                      ; Updated 04 Jan 2023 for Dual 32K(8K used) VRAM
                      
D001                  PORTB               EQU $D001
D003                  CTRLB               EQU $D003
                      
D400                  CRTCAR              EQU  $D400
D401                  CRTCDR              EQU  CRTCAR+1
8000                  VRAM                EQU  $8000
92C0                  VRAMTOP             EQU  $92C0 ; (30x80x2)
0030                  ASCII0              EQU  $30
0020                  ASCIISPACE          EQU  $20
0050                  COLSPERROW          EQU  $50
001E                  ROWSPERPAGE         EQU  $1E
0030                  ROWSPERPAGEBCD      EQU  $30
0002                  BYTESPERCHAR        EQU  $02
00F2                  CHARCOLOUR          EQU  %11110010 ; White foreground, blue background
0000                  CRTLINE1            RMB  2 ; CRTC Address where 1st Line starts,  
0002                  ENDVRAM             RMB  2
                      
0000                  EOS                 EQU  $00      end of string
                      
1000                                      ORG  $1000
                                          
1000  4F              CRTStart            clra
1001  B7D003                              sta      CTRLB            ; Set Port B to data direction register
1004  860F                                lda      #$0F              ; set bits 0-3 for output, 4-7 for input
1006  B7D001                              sta      PORTB            ; Set Port B to output for bits 0-3
1009  8604                                lda      #$04              ; Set control register b2=1 Output Register
100B  B7D003                              sta      CTRLB            ; Set Port B control register for Port Output, will be keypad row
                      
100E  8E8000          CLRSCREEN           ldx      #VRAM
1011  8620                                lda      #ASCIISPACE
1013  C6F2                                ldb      #CHARCOLOUR
1015  1700DC          CLEARSCREEN1        lbsr     WAITFORVSDE
1018  108E0050                            ldy      #80
101C  E780            CLEARSCREEN2        stb      ,X+
101E  A780                                sta      ,X+         ; Could Use D and X++
1020  313F                                leay     -1,Y
1022  26F8                                bne      CLEARSCREEN2
1024  8C92C0                              cmpx     #VRAMTOP
1027  2FEC                                ble      CLEARSCREEN1
                                          
1029  8E8001          TOPLINE             ldx      #VRAM+1
102C  8601                                lda      #$01
102E  170094          TOPLINE1            lbsr      PRINTDIGIT
1031  8B01                                adda      #$01
1033  19                                  daa
1034  8C80A0                              cmpx      #VRAM + COLSPERROW * BYTESPERCHAR 
1037  2FF5                                ble       TOPLINE1
                      ; Print 10's under 1st line
                      
1039  8E80B3          SECLINE             ldx      #VRAM + 1 + COLSPERROW * BYTESPERCHAR + 9 * BYTESPERCHAR ; Start at 10th Column
103C  8601                                lda      #$1
103E  170084          SECLINE1            lbsr      PRINTDIGIT ; This will increase X by 2
1041  308812                              leax     9*BYTESPERCHAR,X
1044  8B01                                adda     #$01
1046  19                                  daa
1047  8C8140                              cmpx     #VRAM + 2 * COLSPERROW * BYTESPERCHAR ; 2 Bytes per character 0/even is character 1/odd is colour
104A  2FF2                                ble      SECLINE1
                      
                      
104C  8E9221          LOWLINE             ldx      #VRAM + 1 + ROWSPERPAGE * COLSPERROW * BYTESPERCHAR - COLSPERROW * BYTESPERCHAR 
104F  8601                                lda      #$01
1051  8D72            LOWLINE1            bsr      PRINTDIGIT
1053  8B01                                adda     #$01
1055  19                                  daa
1056  8C92C0                              cmpx     #VRAM + COLSPERROW * BYTESPERCHAR * ROWSPERPAGE; 2 Bytes per character 0/even is character 1/odd is colour
1059  2FF6                                ble      LOWLINE1
                      
105B  8E9193          LOWSECLINE          ldx      #VRAM + 1 + ROWSPERPAGE * COLSPERROW * BYTESPERCHAR - 2 * COLSPERROW * BYTESPERCHAR + 9 * BYTESPERCHAR ; Start at 10th Column
105E  8601                                lda      #$1
1060  8D63            LOWSECLINE1         bsr      PRINTDIGIT ; This will increase X by 2
1062  308812                              leax     9*BYTESPERCHAR,X
1065  8B01                                adda     #$01
1067  19                                  daa
1068  8C9220                              cmpx     #VRAM + ROWSPERPAGE * COLSPERROW * BYTESPERCHAR - COLSPERROW * BYTESPERCHAR
106B  2FF3                                ble      LOWSECLINE1
                      
                      
106D  8602            LINENO              lda      #$02
106F  8E80A1                              ldx      #VRAM + 1 + COLSPERROW * BYTESPERCHAR
1072  8D3D            LINENO1             bsr      PRINTNUM
1074  30890098                            leax     76*BYTESPERCHAR,X  ; Move to end of line
1078  8D37                                bsr      PRINTNUM ; X should be start of next line after this
107A  8B01                                adda     #$01
107C  19                                  daa
107D  8130                                cmpa     #ROWSPERPAGEBCD
107F  26F1                                bne      LINENO1
                                          ;SWI
                                          ; +7 (4 char), 16 x 4 char= 64=128 bytes + 25
                                          ; Add 32 for end of line (16 char)
1081  4F              CHARDUMP            clra      ; Display two digit character code, character, 1 spaces for 0-255, start at Col 4 (add 7)
1082  8E8127                              ldx       #VRAM - 32 + 7 + 2 * COLSPERROW * BYTESPERCHAR
1085  5F              CHARDUMP1           clrb
1086  308820                              leax      16*BYTESPERCHAR,X
1089  8D46            CHARDUMP2           bsr       PRINTHEX
108B  A781                                sta       ,X++
108D  3002                                leax      1*BYTESPERCHAR,X
108F  4C                                  inca
1090  5C                                  incb
1091  C110                                cmpb      #$10
1093  26F4                                bne       CHARDUMP2
1095  4D                                  tsta
1096  26ED                                bne       CHARDUMP1
                      
                                          ; +7 (4 char), 16 x 4 char= 64=128 bytes + 25
                                          ; Add 32 for end of line (16 char)
1098  4F              COLDUMP             clra      ; Display two digit character code, character, 1 spaces for 0-255, start at Col 4 (add 7)
1099  8E8C67                              ldx       #VRAM - 32 + 7 + 20 * COLSPERROW * BYTESPERCHAR
109C  C620                                ldb       #$20
109E  308820                              leax      32,X
10A1  8D2E            COLDUMP1            bsr       PRINTHEX
                      ;COLDUMP1            leax      4,X
10A3  8D4F                                bsr      WAITFORVSDE
10A5  A71F                                sta       -1,X
10A7  E784                                stb       ,X
10A9  3004                                leax      4,X
10AB  4C                                  inca
10AC  8110                                cmpa      #$10
10AE  26F1                                bne       COLDUMP1
                      
10B0                  CRTEND
10B0  3F                                  swi
                                          
                      ; 12345678901234567890
                      ; 02       1         2 ..... 02
                      
                      ; Take BCD two digit number in A and print at X
10B1  3402            PRINTNUM            pshs     a           ; Save A twice
10B3  3402                                pshs     a
10B5  84F0                                anda     #%11110000  ; Mask LSB
10B7  44                                  lsra                 ; Rotate MSB down to LSB
10B8  44                                  lsra
10B9  44                                  lsra
10BA  44                                  lsra
10BB  8D08                                bsr PRINTDIGIT
10BD  3502                                puls     a           ; Restore A
10BF  840F                                anda     #%00001111  ; Mask MSB
10C1  8D02                                bsr PRINTDIGIT
10C3  3582                                puls     a,pc
                      
                      ; Take Lower 4 bits in A and print ASCII digit at X and increment X
10C5  3402            PRINTDIGIT          pshs     a
10C7  840F                                anda     #%00001111  ; Strip any MSB
10C9  8B30                                adda     #ASCII0     ; Add 48 decimal, 0=$30, 1=$31
10CB  8D27                                bsr      WAITFORVSDE
10CD  A781                                sta      ,X++
10CF  3582                                puls     a,pc
                      
10D1  3402            PRINTHEX            pshs     a            ; Save byte value as need to return since used for checksum calc
10D3  3402                                pshs     a            ; Save again so we can mask top and lower nibbles
10D5  84F0                                anda     #%11110000   ; Mask High nibble
10D7  44                                  lsra                  ; Shift to Low nibble
10D8  44                                  lsra 
10D9  44                                  lsra
10DA  44                                  lsra
                                     
10DB  8B90                                adda     #$90          ; LSB to ASCII Hex as per page 7-2 of Leventhal
10DD  19                                  daa                    ; 0-9  $30-$39 A-F $41-$46
10DE  8940                                adca     #$40
10E0  19                                  daa
10E1  8D11                                bsr      WAITFORVSDE
10E3  A781                                sta     ,X++
                                     
10E5  3502                                puls     a 
10E7  840F                                anda     #%00001111    ; Mask Low nibble
                      
10E9  8B90                                adda     #$90          ; LSB to ASCII Hex as per page 7-2 of Leventhal
10EB  19                                  daa
10EC  8940                                adca     #$40
10EE  19                                  daa
10EF  A781                                sta     ,X++
10F1  3502                                puls     a
10F3  39                                  rts
                                          
10F4  3402            WAITFORVSDE         pshs     a
10F6  8680            TESTDE              lda      #$80          ; Mask PB7 on Port B of PIA
10F8  B5D001                              bita     PORTB        ; Test PB7 for Display Enable, when 1 then screen blanked
10FB  27F9                                beq      TESTDE       
10FD  B5D001                              bita     PORTB        ; Test PB7 again
1100  27F4                                beq      TESTDE       ; If 0 then only HS or end of VS, so continue to wait for DE=1 for more than 6ms
1102  3582                                puls     a,pc
                                          
                                          
                                          
