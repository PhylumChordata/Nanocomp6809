                      ;C:\Users\Dave\Documents\_6809\asm6809-2.12-w64\asm6809.exe -S -l tetrisguipoc.txt tetrisguipoc.asm -o tetrisguipoc.srec
                          
                      
0000                                                ORG $0000           ; Tetris Custom Characters start at $F0
D001                  PORTB               EQU $D001
D003                  CTRLB               EQU $D003
                      
D400                  CRTCADDRESS                   EQU  $D400
D401                  CRTCDATAREGISTER              EQU  CRTCADDRESS+1
8000                  VRAM                          EQU  $8000 ; Start of Video RAM
BFFF                  VRAMEND                       EQU  $BFFF ; End of Video RAM
C000                  CGRAM                         EQU  $C000 ; Start of character generator RAM
CFFF                  CGRAMEND                      EQU  $CFFF ; End of character generator RAM
E000                  CGROM                         EQU  $E000 ; Start of character generator ROM
0030                  ASCII0                        EQU  $30
0020                  ASCIISPACE                    EQU  $20
0050                  COLSPERROW                    EQU  $50
001E                  ROWSPERPAGE                   EQU  $1E
0030                  ROWSPERPAGEBCD                EQU  $30
0002                  BYTESPERCHAR                  EQU  $02
F020                  CLSDEFAULT                    EQU  $F020 ; White on Black, Space
                      
7FC2                  DISPCLS                       EQU  $7FC2 ; This may change with monitor updates (current as of V9)
F6DE                  CLRSCREEN                     EQU  $F6DE  ; Monitor Clear Screen (current as of V9)
                      
00E0                  TABLECOLOUR                   EQU  $E0   ; Grey on black
00A0                  TABLEROWBYTES                 EQU  $A0
82BC                  VRAMTABLE                     EQU  VRAM + 4 * TABLEROWBYTES + 30 * BYTESPERCHAR ; Start table at row 5, 30 cells in (60 bytes)
                      
00F0                  SIDELEFT           EQU      $F0
00F1                  SIDERIGHT          EQU      $F1
00F2                  LOW                EQU      $F2
00F3                  TOP                EQU      $F3
00F4                  BACK               EQU      $F4
00F5                  TOPLEFT            EQU      $F5
00F6                  TOPRIGHT           EQU      $F6
00F7                  LOWLEFT            EQU      $F7
00F8                  LOWRIGHT           EQU      $F8
00F9                  LEFT               EQU      $F9
00FA                  RIGHT              EQU      $FA
00FB                  OUTLINELEFT        EQU      $FB
00FC                  OUTLINERIGHT       EQU      $FC
00FD                  BLANK              EQU      $FD
                      
                      
0000  8ECF00          COPYCHARGENROM                ldx      #CGRAM + 16 * 16 * 15 ; Each character is 16 Bytes, 16 Characters per block start at end of block 15
0003  108E0188                                      ldy      #TETRISSIDELEFT ; 1st Bitmap of character
0007  ECA1            COPYROM                       ldd      ,y++
0009  ED81                                          std      ,x++
000B  8CCFFF                                        cmpx     #CGRAMEND
000E  2FF7                                          ble      COPYROM
                                                    
0010  8620                                          lda      #CLSDEFAULT ; Change the default CLS combination
0012  B77FC2                                        sta      DISPCLS
0015  BDF6DE                                        jsr      CLRSCREEN
                                                    
                                                    
                      ; Start at line 5 (+4xA0) Start at 30 Dec x 2, game area is 20 rows by 10 columns (20 characters)
0018  8E82BC          PRINTTABLE                    ldx      #VRAMTABLE
001B  C6E0                                          ldb      #TABLECOLOUR
001D  E780                                          stb      ,X+
001F  86F5                                          lda      #TOPLEFT
0021  A780                                          sta      ,X+
0023  86F3                                          lda      #TOP ; Need 20 TOP Characters then TOPRIGHT
0025  E780            TOPLINE                       stb      ,X+
0027  A780                                          sta      ,X+
0029  8C82E6                                        cmpx     #VRAMTABLE+42 ; 2 + 4x10
002C  26F7                                          bne      TOPLINE
002E  E780                                          stb      ,X+
0030  86F6                                          lda      #TOPRIGHT
0032  A780                                          sta      ,X+
0034  8E835C                                        ldx      #VRAMTABLE + TABLEROWBYTES
0037  86F0            TABLESIDES                    lda      #SIDELEFT
0039  E780                                          stb      ,X+
003B  A780                                          sta      ,X+
003D  308828                                        leax     40,X
0040  86F1                                          lda      #SIDERIGHT
0042  E780                                          stb      ,X+
0044  A780                                          sta      ,X+
0046  308874                                        leax     TABLEROWBYTES-44,X
0049  8C8F3C                                        cmpx     #VRAMTABLE + TABLEROWBYTES * 20
004C  2FE9                                          ble      TABLESIDES
                      
                                                    ;swi
004E  E780                                          stb      ,X+
0050  86F7                                          lda      #LOWLEFT
0052  A780                                          sta      ,X+
0054  86F2                                          lda      #LOW ; Need 20 LOW Characters then LOWRIGHT
0056  E780            LOWLINE                       stb      ,X+
0058  A780                                          sta      ,X+
005A  8C9004                                        cmpx     #VRAMTABLE + TABLEROWBYTES * 21 + 40  ; 2 + 4x10
                                                    
005D  2FF7                                          ble      LOWLINE
005F  E780                                          stb      ,X+
0061  86F8                                          lda      #LOWRIGHT
0063  A780                                          sta      ,X+
                      
                                                    ;swi
                                                    ; Output Ghost tetronimo at the bottom
0065  8613                                          lda      #$13
0067  B70288                                        sta      CURROW
006A  8604                                          lda      #$04
006C  B70289                                        sta      CURCOL
                                                   
006F  BD0150                                        jsr      ROWCOLTOX  ; Get address of colour byte in X
0072  86F0                                          lda      #$F0
0074  C6FB                                          ldb      #OUTLINELEFT
0076  ED81                                          std      ,X++
0078  C6FC                                          ldb      #OUTLINERIGHT
007A  ED81                                          std      ,X++
007C  C6FB                                          ldb      #OUTLINELEFT
007E  ED81                                          std      ,X++
0080  C6FC                                          ldb      #OUTLINERIGHT
0082  ED81                                          std      ,X++
0084  C6FB                                          ldb      #OUTLINELEFT
0086  ED81                                          std      ,X++
0088  C6FC                                          ldb      #OUTLINERIGHT
008A  ED81                                          std      ,X++
008C  C6FB                                          ldb      #OUTLINELEFT
008E  ED81                                          std      ,X++
0090  C6FC                                          ldb      #OUTLINERIGHT
0092  ED81                                          std      ,X++
                                                    
0094  4F                                            clra                      ; Init PIA for checking Display Enable
0095  B7D003                                        sta      CTRLB            ; Set Port B to data direction register
0098  860F                                          lda      #$0F              ; set bits 0-3 for output, 4-7 for input
009A  B7D001                                        sta      PORTB            ; Set Port B to output for bits 0-3
009D  8604                                          lda      #$04              ; Set control register b2=1 Output Register
009F  B7D003                                        sta      CTRLB            ; Set Port B control register for Port Output, will be keypad row
                      
00A2  7F0288          STARTDROP                     clr      CURROW
00A5  8604                                          lda      #$04
00A7  B70289                                        sta      CURCOL
00AA  BD0135                                        jsr      CLEARTET
00AD  7C0288          DROPLOOP                      inc      CURROW
00B0  BD010B                                        jsr      DISPTET
                                                    
00B3  108E4000                                      ldy      #$4000
00B7  313F            DELAYLOOP                     leay     -1,y
00B9  26FC                                          BNE      DELAYLOOP
00BB  BD0135                                        jsr      CLEARTET
00BE  8613                                          lda      #$13
00C0  B10288                                        cmpa     CURROW
00C3  26E8                                          bne      DROPLOOP
                      
                                                    ; Output Ghost tetronimo at the bottom
00C5  8613                                          lda      #$13
00C7  B70288                                        sta      CURROW
00CA  8604                                          lda      #$04
00CC  B70289                                        sta      CURCOL
                                                   
00CF  BD0150                                        jsr      ROWCOLTOX  ; Get address of colour byte in X
00D2  86F0                                          lda      #$F0
00D4  C6FB                                          ldb      #OUTLINELEFT
00D6  ED81                                          std      ,X++
00D8  C6FC                                          ldb      #OUTLINERIGHT
00DA  ED81                                          std      ,X++
00DC  C6FB                                          ldb      #OUTLINELEFT
00DE  ED81                                          std      ,X++
00E0  C6FC                                          ldb      #OUTLINERIGHT
00E2  ED81                                          std      ,X++
00E4  C6FB                                          ldb      #OUTLINELEFT
00E6  ED81                                          std      ,X++
00E8  C6FC                                          ldb      #OUTLINERIGHT
00EA  ED81                                          std      ,X++
00EC  C6FB                                          ldb      #OUTLINELEFT
00EE  ED81                                          std      ,X++
00F0  C6FC                                          ldb      #OUTLINERIGHT
00F2  ED81                                          std      ,X++
                                                    
00F4  7E00A2                                        jmp      STARTDROP
                                                  
                                                    
00F7  3F              END                           swi
                      
                      
00F8  3402            WAITFORVSDE         pshs     a
00FA  8680            TESTDE              lda      #$80          ; Mask PB7 on Port B of PIA
00FC  B5D001                              bita     PORTB        ; Test PB7 for Display Enable, when 1 then screen blanked
00FF  27F9                                beq      TESTDE
0101  12                                  nop
0102  12                                  nop
0103  12                                  nop                    
0104  B5D001                              bita     PORTB        ; Test PB7 again
0107  27F1                                beq      TESTDE       ; If 0 then only HS or end of VS, so continue to wait for DE=1 for more than 6ms
0109  3582                                puls     a,pc
                      
                                                    
010B  BD0150          DISPTET                       jsr      ROWCOLTOX  ; Get address of colour byte in X using CURROW and CURCOL
010E  BD00F8                                        jsr      WAITFORVSDE
0111  8670                                          lda      #$70
0113  C6F9                                          ldb      #LEFT
0115  ED81                                          std      ,X++
0117  C6FA                                          ldb      #RIGHT
0119  ED81                                          std      ,X++
011B  C6F9                                          ldb      #LEFT
011D  ED81                                          std      ,X++
011F  C6FA                                          ldb      #RIGHT
0121  ED81                                          std      ,X++
0123  C6F9                                          ldb      #LEFT
0125  ED81                                          std      ,X++
0127  C6FA                                          ldb      #RIGHT
0129  ED81                                          std      ,X++
012B  C6F9                                          ldb      #LEFT
012D  ED81                                          std      ,X++
012F  C6FA                                          ldb      #RIGHT
0131  ED81                                          std      ,X++
0133  39                                            rts
                      
                                                    ; swi
                                                     
                      
                      
0134  3F                                            swi
                      
0135  BD0150          CLEARTET                      jsr      ROWCOLTOX  ; Get address of colour byte in X using CURROW and CURCOL
0138  BD00F8                                        jsr      WAITFORVSDE
013B  86F0                                          lda      #$F0
013D  C6FD                                          ldb      #BLANK
013F  ED81                                          std      ,X++
0141  ED81                                          std      ,X++
0143  ED81                                          std      ,X++
0145  ED81                                          std      ,X++
0147  ED81                                          std      ,X++
0149  ED81                                          std      ,X++
014B  ED81                                          std      ,X++
014D  ED81                                          std      ,X++
014F  39                                            rts
                                                    
                      ; This lookup table can be used to calculate address for (CURCOL, CURROW), Use column in A ROL 1 bit (x2) 
0150  8E0160          ROWCOLTOX                     LDX      #COLADDRESS
0153  B60288                                        LDA      CURROW
0156  49                                            ROLA
0157  3096                                          LEAX     [A,X]
0159  F60289                                        LDB      CURCOL
015C  59                                            ROLB
015D  3085                                          LEAX      B,X
015F  39                                            RTS
                                                    
                      ; Pre-caclculated index table for start of each row to avoid multiplication during execution
0160  835E            COLADDRESS                    FDB      #VRAMTABLE + 2 + TABLEROWBYTES
0162  83FE            COLADDRESS1                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 2
0164  849E            COLADDRESS2                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 3
0166  853E            COLADDRESS3                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 4
0168  85DE            COLADDRESS4                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 5
016A  867E            COLADDRESS5                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 6
016C  871E            COLADDRESS6                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 7
016E  87BE            COLADDRESS7                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 8
0170  885E            COLADDRESS8                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 9
0172  88FE            COLADDRESS9                   FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 10
0174  899E            COLADDRESS10                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 11
0176  8A3E            COLADDRESS11                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 12
0178  8ADE            COLADDRESS12                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 13
017A  8B7E            COLADDRESS13                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 14
017C  8C1E            COLADDRESS14                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 15
017E  8CBE            COLADDRESS15                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 16
0180  8D5E            COLADDRESS16                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 17
0182  8DFE            COLADDRESS17                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 18
0184  8E9E            COLADDRESS18                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 19
0186  8F3E            COLADDRESS19                  FDB      #VRAMTABLE + 2 + TABLEROWBYTES * 20
                      
                      
                      ; Character Generator redefined Tetris characters from $F0
0188  1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E TETRISSIDELEFT     FCB      $1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E         ; Side vertical bar 4 wide, 1 in left
0198  78787878787878787878787878787878 TETRISSIDERIGHT    FCB      $78,$78,$78,$78,$78,$78,$78,$78,$78,$78,$78,$78,$78,$78,$78,$78         ; Side vertical bar 4 wide, 1 in right
01A8  00FFFFFFFF0000000000000000000000 TETRISLOW          FCB      $00,$FF,$FF,$FF,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00         ; Low bar 4 deep 1 down
01B8  0000000000000000000000FFFFFFFF00 TETRISTOP          FCB      $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$00         ; Top bar 4 deep 1 up
01C8  FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF TETRISBACK         FCB      $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF         ; Background
01D8  0000000000000000000000070F1F1F1E TETRISTOPLEFT      FCB      $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$0F,$1F,$1F,$1E         ; Top Right Corner
01E8  0000000000000000000000E0F0F8F878 TETRISTOPRIGHT     FCB      $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$E0,$F0,$F8,$F8,$78         ; Top Left Corner
01F8  1E1F1F0F070000000000000000000000 TETRISLOWLEFT      FCB      $1E,$1F,$1F,$0F,$07,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00         ; Lower Left Corner
0208  78F8F8F0E00000000000000000000000 TETRISLOWRIGHT     FCB      $78,$F8,$F8,$F0,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00         ; Lower Right Corner
0218  007F7F7F7F7F7F7F7F7F7F7F7F7F7F00 TETRISLEFT         FCB      $00,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$7F,$00         ; Tetris Square Left
0228  00FEFEFEFEFEFEFEFEFEFEFEFEFEFE00 TETRISRIGHT        FCB      $00,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE,$00         ; Tetris Square Right
0238  007F4040404040404040404040407F00 TETRISOUTLINELEFT  FCB      $00,$7F,$40,$40,$40,$40,$40,$40,$40,$40,$40,$40,$40,$40,$7F,$00         ; Tetris Square Outline Left
0248  00FE020202020202020202020202FE00 TETRISOUTLINERIGHT FCB      $00,$FE,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$FE,$00         ; Tetris Square Outline Right
0258  00000000000000000000000000000000 TETRISBLANK0       FCB      $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00         ; Blank
0268  00000000000000000000000000000000 TETRISBLANK1       FCB      $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00         ; Blank
0278  00000000000000000000000000000000 TETRISBLANK2       FCB      $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00         ; Blank
                      
0288                  CURROW            RMB      1;
0289                  CURCOL            RMB      1;
